server.port=9091

# spring.main.banner-mode=off
# ????? ? ???????: ALWAYS, NEVER or DETECT
# spring.output.ansi.enabled=ALWAYS

#logging.level.org.springframework=DEBUG
#logging.level.org.springframework.web=ERROR
# hm.sitek.pos
logging.level.hm.sitek.pos=DEBUG
logging.level.root=DEBUG
logging.level.org.hibernate=DEBUG
#logging.file.name=${java.io.tmpdir}/app.log
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
#logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss } %-5p [%15t] (%20F:%4L) - %m%n
#logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss.SSS } %-5p [%15t] (%20F:%4L) - %m%n
logging.file.name=logs/app.log

#spring.datasource.url=jdbc:h2:mem:usersapi
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

## default connection pool
##spring.datasource.hikari.connectionTimeout=20000
##spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/cash_machine
#spring.datasource.username=cash
#spring.datasource.password=myPass
#spring.datasource.username=cash
#spring.datasource.password=myPass
#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.generate-ddl=true
##
spring.datasource.url= jdbc:postgresql://localhost:5432/cash_machine
spring.datasource.username= cash
spring.datasource.password= myPass
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true

# Spring Security
#spring.security.user.name=root
#spring.security.user.password=derParol
# Roles: default,admin
#spring.security.user.role=default
#spring.security.user.role=admin
